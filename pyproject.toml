[tool.poetry]
name = "geoip"
version = "0.0.2"
description = "Microservice for determining country, city, etc. by IP address"
authors = ["kostya <kostya@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
fastapi = "^0.108.0"
loguru = "^0.7.2"
orjson = "^3.9.10"
uvicorn = "^0.25.0"
geoip2 = "^4.8.0"
httpx = {extras = ["http2"], version = "^0.26.0"}
asgi-lifespan = "^2.1.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-env = "^1.1.3"
mypy = "^1.8.0"
coverage = "^7.4.0"
black = "^23.12.1"
ruff = "^0.1.11"
pytest-mock = "^3.12.0"
pre-commit = "^3.6.0"
loguru-mypy = "^0.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
minversion = "6.0"
asyncio_mode = "auto"
testpaths = [
    "tests",
]
env = [
    "PYTEST = True",
]

[tool.black]
line-length = 120
target-version = ["py312"]
skip-string-normalization = true

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    ".mypy_cache",
    ".data",
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

